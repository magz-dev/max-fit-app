# Imports
from .models import Coupon
from django import forms


# Coupon form
class FormCoupon(forms.ModelForm):

    class Meta:
        # Setup form structure
        model = Coupon
        fields = ['code', 'amount']
        widgets = {
            'code': forms.TextInput(attrs={'\
            placeholder': 'Code: 6-10 alphanumeric', 'class': 'altFont'}),
            'amount': forms.TextInput(attrs={'\
            placeholder': 'Amount (percentage 1-100)', 'class': 'altFont'})
        }

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        # Apply Form Validation and style
        for field in self.fields:
            if field == 'code':
                self.fields[field].widget.attrs[
                    "pattern"
                ] = '^[a-zA-Z0-9]{6,10}$'
            if field == 'amount':
                self.fields[field].widget.attrs['pattern'] = '^[0-9]{1,}$'
            self.fields[field].widget.attrs['class'] = 'form-input'

        # Remove labels auto generated by form
        self.fields['code'].label = False
        self.fields['amount'].label = False

    # Credit for adapted check amount value - see README.md for more details
    def clean_amount(self):
        amount = self.cleaned_data['amount']
        if amount < 1:
            raise forms.ValidationError("Amount cannot be less than 1")
        return amount
        